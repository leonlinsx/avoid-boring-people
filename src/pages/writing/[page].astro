---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import readingTime from "reading-time";
import { SITE_TITLE } from "../../consts";
import type { GetStaticPaths } from "astro";
import Pagination from "../../components/Pagination.astro";
import Filters from "../../components/Filters.astro";
import PostList from "../../components/PostList.astro";
import WritingHeader from "../../components/WritingHeader.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection("blog");

  // Build global categories list
  const categories = Array.from(
    new Set(allPosts.map((p) => p.data.category?.trim().toLowerCase() || ""))
  )
    .filter(Boolean)
    .sort((a, b) => a.localeCompare(b));

  const posts = allPosts
    .map((p) => ({
      ...p,
      slug: p.id.replace(/\.md$/, ""),
      data: {
        ...p.data,
        category: p.data.category?.trim() || "",
        readingTime: Math.max(1, Math.round(readingTime(p.body ?? "").minutes)),
      },
    }))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  const pages = paginate(posts, { pageSize: 8 });

  return pages.map((pg) => ({
    ...pg,
    props: {
      ...(pg.props || {}),
      categories,
    },
  }));
}) satisfies GetStaticPaths;

const { page, categories = [] } = Astro.props;
const pagedPosts = page.data;
const currentPage = page.currentPage;
const totalPages = page.lastPage;

const activeCategory = ""; // "All" page
---

<BaseLayout
  title={`Writing | ${SITE_TITLE}`}
  description="All essays, notes, and more."
>
  <WritingHeader
    title="Essays, Notes, and More"
    subtitle="Thinking out loud about finance, tech, and other compounding ideas"
  />

  <!-- Category Filters -->
  <Filters categories={categories} activeCategory={activeCategory} />

  <!-- Posts -->
  <PostList posts={pagedPosts} />

  <!-- Pagination -->
  <Pagination currentPage={currentPage} totalPages={totalPages} />
</BaseLayout>
