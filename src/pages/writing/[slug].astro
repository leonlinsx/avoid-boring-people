---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { getCleanSlug } from '../../utils/slug'; // ✅ centralize slug logic

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const seen = new Map(); // slug -> post.id

  return posts.map((post) => {
    // ✅ always use centralized slug function
    let slug = getCleanSlug(post);

    // Handle collisions with warning
    if (seen.has(slug)) {
      console.warn(
        `⚠️ Duplicate slug detected: "${slug}" from "${post.id}" conflicts with "${seen.get(slug)}".` +
          ` Using "${slug}-${post.data.pubDate.getFullYear()}" instead.`,
      );
      slug = `${slug}-${post.data.pubDate.getFullYear()}`;
    }

    seen.set(slug, post.id);

    return {
      params: { slug },
      props: { ...post, slug },
    };
  });
}

type Props = CollectionEntry<'blog'> & { slug: string };

const post = Astro.props;
const { Content, headings } = await render(post);
---

<BlogPost post={post} headings={headings}>
  <Content />
</BlogPost>
