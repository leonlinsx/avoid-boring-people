---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import PostList from '../components/PostList.astro';
import { SITE_BANNER_IMAGE, SITE_URL } from '../consts';
import { enrichPost } from '../utils/text';
import TableOfContents from '../components/TableOfContents.astro';
import ShareButtons from '../components/ShareButtons.astro';
import TagList from '../components/TagList.astro';
// Remove local readingTime calculation
import SubscribeForm from '../components/SubscribeForm.astro';
import type { MarkdownHeading } from 'astro';

type Props = {
  post: CollectionEntry<'blog'>;
  headings?: MarkdownHeading[];
};

const { post, headings = [] } = Astro.props;

const enrichedPost = enrichPost(post);
const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags = [],
  readingTime,
} = enrichedPost.data;

const hero = heroImage ?? SITE_BANNER_IMAGE;

// ✅ Related posts
const allPosts = await getCollection('blog');
const related = allPosts
  .filter((p) => p.data.category === category && p.data.title !== title)
  .map(enrichPost)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// ✅ Canonical URL
const canonicalURL = new URL(Astro.url.pathname, SITE_URL).toString();
---

<BaseLayout
  title={title}
  description={description}
  image={typeof hero === 'object' ? hero.src : hero}
>
  <main>
    <article>
      {
        hero && (
          <div class="hero-image">
            {typeof hero === 'object' ? (
              <Image
                src={hero}
                alt={title}
                format="webp"
                width={1200}
                height={630}
                fit="cover"
                loading="eager"
                fetchpriority="high"
                decoding="async"
              />
            ) : (
              <img
                src={hero}
                alt={title}
                width="1200"
                height="630"
                loading="eager"
                fetchpriority="high"
                decoding="async"
              />
            )}
          </div>
        )
      }

      <div class="prose">
        <div class="title">
          <div class="meta">
            <FormattedDate date={pubDate} />
            {category && ` · ${category}`}
            {readingTime && ` · ${readingTime} min read`}
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1>{title}</h1>
        </div>

        <!-- TOC -->
        <TableOfContents headings={headings} />

        <!-- Post content -->
        <slot />

        <!-- Tags -->
        <TagList tags={tags} />

        <!-- Share Buttons -->
        <ShareButtons title={title} url={canonicalURL} />

        <!-- Newsletter CTA -->
        <SubscribeForm compact={false} />

        <!-- Related posts -->
        {
          related.length > 0 && (
            <section class="related-posts">
              <h2>Related Posts</h2>
              <PostList posts={related} variant="compact" />
            </section>
          )
        }
      </div>
    </article>
  </main>
</BaseLayout>

<style>
  .hero-image {
    max-width: 1100px;
    margin: 0 auto 2rem auto;
  }
  .hero-image img,
  .hero-image :global(img) {
    width: 100%;
    max-width: 100%;
    height: auto;
    display: block;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
  }
  .title {
    margin-bottom: 2rem;
    text-align: center;
    line-height: 1.4;
  }
  .meta {
    margin-bottom: 0.75rem;
    font-size: 0.95rem;
    color: rgb(var(--color-text-meta));
  }
  .last-updated-on {
    font-style: italic;
  }
  .title h1 {
    position: relative;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
  }
  .title h1::after {
    content: '';
    display: block;
    margin: 0.75rem auto 0 auto;
    width: 100%;
    height: 1px;
    background-color: #ddd;
  }
  .newsletter-cta {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #eee;
    text-align: center;
  }
  .related-posts > h2 {
    margin-top: 0; /* don’t add extra gap above heading */
    margin-bottom: var(--space-lg);
    font-size: var(--text-xl);
  }
</style>
