---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import FormattedDate from "../components/FormattedDate.astro";
import PostList from "../components/PostList.astro";
import { SITE_BANNER_IMAGE, SITE_URL } from "../consts";
import { enrichPost } from "../utils/text";
import TableOfContents from "../components/TableOfContents.astro";
import ShareButtons from "../components/ShareButtons.astro";
import TagList from "../components/TagList.astro";
import readingTime from "reading-time";

interface Heading {
  level: number;
  id: string;
  text: string;
}

type Props = {
  post: CollectionEntry<"blog">;
  headings?: Heading[];
};

const { post, headings = [] } = Astro.props;

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags = [],
} = post.data;

// ✅ reading time
const body = await Astro.slots.render("default");
const rt = Math.max(1, Math.round(readingTime(body ?? "").minutes));

// ✅ Use hero image or fallback
const hero = heroImage ?? SITE_BANNER_IMAGE;

// ✅ Related posts
const allPosts = await getCollection("blog");
const related = allPosts
  .filter((p) => p.data.category === category && p.data.title !== title)
  .map(enrichPost)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// ✅ Canonical URL
const canonicalURL = new URL(Astro.url.pathname, SITE_URL).toString();
---

<BaseLayout
  title={title}
  description={description}
  image={typeof hero === "object" ? hero.src : hero}
>
  <main>
    <article>
      {hero && (
        <div class="hero-image">
          {typeof hero === "object" ? (
            <Image
              src={hero}
              alt={title}
              format="webp"
              width={1200}
              height={630}
              fit="cover"
              loading="eager"
              fetchpriority="high"
              decoding="async"
            />
          ) : (
            <img
              src={hero}
              alt={title}
              width="1200"
              height="630"
              loading="eager"
              fetchpriority="high"
              decoding="async"
            />
          )}
        </div>
      )}

      <div class="prose">
        <div class="title">
          <div class="meta">
            <FormattedDate date={pubDate} />
            {category && ` · ${category}`}
            {rt && ` · ${rt} min read`}
            {updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )}
          </div>
          <h1>{title}</h1>
        </div>

        <!-- TOC -->
        <TableOfContents headings={headings} />

        <!-- Post content -->
        <slot />

        <!-- Tags -->
        <TagList tags={tags} />

        <!-- Share Buttons -->
        <ShareButtons title={title} url={canonicalURL} />

        <!-- Newsletter CTA -->
        <section id="subscribe" class="signup">
          <h2>Enjoyed this post?</h2>
          <p class="subtext">Get my next essays in your inbox:</p>
          <div class="signup-box" aria-label="Newsletter signup form">
            <iframe
              src="https://avoidboringpeople.substack.com/embed"
              width="100%"
              height="150"
              frameborder="0"
              scrolling="no"
              title="Newsletter signup form"
            ></iframe>
          </div>
        </section>

        <!-- Related posts -->
        {related.length > 0 && (
          <section class="related-posts">
            <h2>Related Posts</h2>
            <PostList posts={related} variant="list" />
          </section>
        )}
      </div>
    </article>
  </main>
</BaseLayout>

<style>
  .hero-image {
    max-width: 1100px;
    margin: 0 auto 2rem auto;
  }
  .hero-image img,
  .hero-image :global(img) {
    width: 100%;
    max-width: 100%;
    height: auto;
    display: block;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
  }
  .title {
    margin-bottom: 2rem;
    text-align: center;
    line-height: 1.4;
  }
  .meta {
    margin-bottom: 0.75rem;
    font-size: 0.95rem;
    color: rgb(var(--color-text-meta));
  }
  .last-updated-on {
    font-style: italic;
  }
  .title h1 {
    position: relative;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
  }
  .title h1::after {
    content: "";
    display: block;
    margin: 0.75rem auto 0 auto;
    width: 100%;
    height: 1px;
    background-color: #ddd;
  }
  .newsletter-cta {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #eee;
    text-align: center;
  }
  .related-posts {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #eee;
  }
  .related-posts h2 {
    margin-bottom: 1rem;
    text-align: left;
  }
  .related-posts .post-card {
    align-items: flex-start;
  }
  .related-posts .post-content {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-height: 6rem;
  }
</style>
